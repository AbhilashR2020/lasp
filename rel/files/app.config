[
 %% eleveldb config
 {eleveldb, [
             {data_root, "./data/leveldb"}
            ]},

 %% lasp config
 {lasp, [
            %% Which peer service to use.
            {peer_service, lasp_plumtree_peer_service},

            %% Which distribution backend to use.
            {distribution_backend, lasp_plumtree_broadcast_distribution_backend},

            %% Which storage backend to use.
            {storage_backend, lasp_hanoidb_storage_backend}
            ]},

 %% SASL config
 {sasl, [
         {sasl_error_logger, {file, "log/sasl-error.log"}},
         {errlog_type, error},
         {error_logger_mf_dir, "log/sasl"},      % Log directory
         {error_logger_mf_maxbytes, 10485760},   % 10 MB max file size
         {error_logger_mf_maxfiles, 5}           % 5 files max
         ]},

 %% hanoidb config
 {hanoidb, [
          {data_root, "./data/hanoidb"},

          %% Enable/disable on-disk compression.
          %%
          %% {compress, none | gzip},
          {compress, none},

          %% Expire (automatically delete) entries after N seconds.
          %% When this value is 0 (zero), entries never expire.
          %%
          {expiry_secs, 0},

          %% Sync strategy `none' only syncs every time the
          %% nursery runs full, which is currently hard coded
          %% to be evert 256 inserts or deletes.
          %%
          %% Sync strategy `sync' will sync the nursery log
          %% for every insert or delete operation.
          %%
          %% {sync_strategy, none | sync | {seconds, N}},
          {sync_strategy, none},

          %% The page size is a minimum page size, when a page fills
          %% up to beyond this size, it is written to disk.
          %% Compression applies to such units of page size.
          %%
          {page_size, 8192},

          %% Read/write buffer sizes apply to merge processes.
          %% A merge process has two read buffers and a write
          %% buffer, and there is a merge process *per level* in
          %% the database.
          %%
          {write_buffer_size, 524288},  % 512kB
          {read_buffer_size, 524288},  % 512kB

          %% The merge strategy is one of `fast' or `predictable'.
          %% Both have same log2(N) worst case, but `fast' is
          %% sometimes faster; yielding latency fluctuations.
          %%
          %% {merge_strategy, fast | predictable},
          {merge_strategy, fast},

          %% "Level0" files has 2^N KVs in it, defaulting to 1024.
          %% If the database is to contain very small KVs, this is
          %% likely too small, and will result in many unnecessary
          %% file operations.  (Subsequent levels double in size).
          {top_level, 10}  % 1024 Key/Values
         ]}
].
